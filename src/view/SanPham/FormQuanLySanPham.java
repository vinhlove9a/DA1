/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.SanPham;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.SanPham;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import repository.LoadAnhFromDB;
import repository.LoadAnhToDB;
import repository.SanPhamRepo;
import view.TrangChu.FormTrangChu;

/**
 *
 * @author Admin
 */
public class FormQuanLySanPham extends javax.swing.JFrame {

    /**
     * Creates new form FormTrangChu
     */
    repository.SanPhamRepo rp = new SanPhamRepo();
    DefaultTableModel model = new DefaultTableModel();
    int index;

    public FormQuanLySanPham() {
        initComponents();
        setLocationRelativeTo(null);
//        setExtendedState(JFrame.MAXIMIZED_BOTH);
        cboLoaiSanPham1.removeAllItems();
        cboLoaiSanPham1.addItem("Đồ ăn");
        cboLoaiSanPham1.addItem("Đồ uống");

        cboLoaiSanPham2.removeAllItems();
        cboLoaiSanPham2.addItem("Đồ ăn");
        cboLoaiSanPham2.addItem("Đồ uống");

        setLocationRelativeTo(null);
        model = (DefaultTableModel) tblSanPham.getModel();
        this.fillToTable(rp.getAll());
//        if (tblSanPham.getRowCount() > 0) {
//            this.showDeTail();
//        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jblQLSP = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        cboLoaiSanPham2 = new javax.swing.JComboBox<>();
        jLabel36 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtMoTa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        spnSoLuong = new javax.swing.JSpinner();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel39 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        cboLoaiSanPham1 = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        lblAnh = new javax.swing.JLabel();
        btnChonAnh = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setBackground(new java.awt.Color(204, 204, 204));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/truck_25px.png"))); // NOI18N
        jLabel4.setText("Quản lý sản phẩm");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Mã Sản Phẩm:");

        jLabel34.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel34.setText("Tên Sản Phẩm:");

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel35.setText("Loại Sản Phẩm:");

        cboLoaiSanPham2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cà Phê", "Bạc Xỉu", "Capuchino", "Trà Đào Cam Sả", " " }));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setText("Đơn Giá:");

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setText("Mô Tả:");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/edit_property_24px.png"))); // NOI18N
        jButton1.setText("Sửa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setText("Số lượng:");

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/add_25px.png"))); // NOI18N
        jButton10.setText("Thêm");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete_25px.png"))); // NOI18N
        jButton11.setText("Xóa");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/delete_25px.png"))); // NOI18N
        jButton14.setText("Clear");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(39, 39, 39)))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMa)
                                    .addComponent(txtTen)
                                    .addComponent(txtDonGia)
                                    .addComponent(cboLoaiSanPham2, 0, 293, Short.MAX_VALUE)
                                    .addComponent(spnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(57, 57, 57))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton11)
                .addGap(18, 18, 18)
                .addComponent(jButton14)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(cboLoaiSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(spnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel37)
                    .addComponent(txtMoTa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 91, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblSanPham.setBackground(new java.awt.Color(204, 204, 204));
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Đơn Giá", "Số lượng tồn", "Mô tả"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel39.setText("Tên Sản Phẩm");

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon.two/search-line-icon.png"))); // NOI18N
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel40.setText("Loại Sản Phẩm");

        cboLoaiSanPham1.setForeground(new java.awt.Color(255, 255, 255));
        cboLoaiSanPham1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất Cả ", "Trái Cây", "Đá Xay", " " }));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/grid_24px.png"))); // NOI18N
        jButton9.setText("Xuất danh sách sản phẩm");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnChonAnh.setText("Chọn ảnh");
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/grid_24px.png"))); // NOI18N
        jButton13.setText("Thêm danh sách SP");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(95, 95, 95))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(cboLoaiSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9))))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                                .addGap(90, 90, 90))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGap(92, 92, 92)
                                .addComponent(btnChonAnh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE))
                            .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboLoaiSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnChonAnh)
                        .addContainerGap(270, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE))))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cboLoaiSanPham1, jButton12, jButton9, txtSearch});

        javax.swing.GroupLayout jblQLSPLayout = new javax.swing.GroupLayout(jblQLSP);
        jblQLSP.setLayout(jblQLSPLayout);
        jblQLSPLayout.setHorizontalGroup(
            jblQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jblQLSPLayout.createSequentialGroup()
                .addGap(587, 587, 587)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
            .addGroup(jblQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jblQLSPLayout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(843, Short.MAX_VALUE)))
        );
        jblQLSPLayout.setVerticalGroup(
            jblQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jblQLSPLayout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jblQLSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jblQLSPLayout.createSequentialGroup()
                    .addGap(53, 53, 53)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jblQLSPLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel8, jPanel9});

        getContentPane().add(jblQLSP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 1440, 670));

        jPanel12.setBackground(new java.awt.Color(255, 153, 51));
        jPanel12.setMinimumSize(new java.awt.Dimension(1418, 126));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon.two/home50px.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel12.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 35)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Three Restaurant FPOLY");
        jPanel12.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 30, -1, -1));

        getContentPane().add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1440, 90));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        updateSanPham();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        addSanPham();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        deleteSanPham();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        index = tblSanPham.getSelectedRow();
        if (index > -1)
            showDeTail();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        timSanPham();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:

        JFileChooser fileChooser = new JFileChooser("D:\\anh");
        fileChooser.setDialogTitle("Lưu file Excel");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));
        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToSave = fileChooser.getSelectedFile();
            if (!fileToSave.getAbsolutePath().endsWith(".xlsx")) {
                fileToSave = new File(fileToSave.getAbsolutePath() + ".xlsx");
            }
            try ( Workbook workbook = new XSSFWorkbook()) {
                org.apache.poi.ss.usermodel.Sheet sheet = workbook.createSheet("Sản Phẩm");
                Row headerRow = sheet.createRow(0);
                headerRow.createCell(0).setCellValue("Mã sản phẩm");
                headerRow.createCell(1).setCellValue("Tên sản phẩm");
                headerRow.createCell(2).setCellValue("Loại");
                headerRow.createCell(3).setCellValue("Giá bán");
                headerRow.createCell(4).setCellValue("Số lượng tồn");
                headerRow.createCell(5).setCellValue("Mô tả");
                for (int i = 0; i < model.getRowCount(); i++) {
                    Row row = sheet.createRow(i + 1);
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        Object cellValue = model.getValueAt(i, j);
                        row.createCell(j).setCellValue(cellValue != null ? cellValue.toString() : "");
                    }
                }
                try ( FileOutputStream outputStream = new FileOutputStream(fileToSave)) {
                    workbook.write(outputStream);
                    JOptionPane.showMessageDialog(this, "Xuất Excel thành công!");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        FormTrangChu tc = new FormTrangChu();
        tc.show();
        dispose();
    }//GEN-LAST:event_jLabel5MouseClicked

    private void tblSanPhamMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblSanPhamMouseEntered

    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        // TODO add your handling code here:
        // Tạo JFileChooser để chọn file ảnh
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Hình ảnh", "jpg", "jpeg", "png"));

        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String imagePath = selectedFile.getAbsolutePath();

            // Hiển thị ảnh trên JLabel
            ImageIcon imageIcon = new ImageIcon(new ImageIcon(imagePath).getImage().getScaledInstance(lblAnh.getWidth(), lblAnh.getHeight(), Image.SCALE_SMOOTH));
            lblAnh.setIcon(imageIcon);

            try {
                // Lấy mã sản phẩm từ text field
                String maSanPhamStr = txtMa.getText();
                if (maSanPhamStr.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm trước khi lưu ảnh.", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    return;
                }

                int maSanPham = Integer.parseInt(maSanPhamStr);

                // Gọi phương thức trong repository để lưu ảnh vào cơ sở dữ liệu
                LoadAnhToDB.saveImageToDatabase2(maSanPham, imagePath);

                JOptionPane.showMessageDialog(this, "Ảnh đã được lưu thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Mã sản phẩm không hợp lệ.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi lưu ảnh: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        importFromExcel();
        fillToTable(rp.getAll());
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_jButton14ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormQuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormQuanLySanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JComboBox<String> cboLoaiSanPham1;
    private javax.swing.JComboBox<String> cboLoaiSanPham2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel jblQLSP;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JSpinner spnSoLuong;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtMoTa;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
private void fillToTable(ArrayList<SanPham> all) {
        SanPhamRepo repo = new SanPhamRepo();
        ArrayList<SanPham> list = repo.getAll();

        // Làm sạch dữ liệu cũ trong bảng
        model.setRowCount(0);

        for (SanPham sp : list) {
            // Chuyển ảnh từ byte[] sang ImageIcon nếu cần
            ImageIcon imageIcon = null;
            if (sp.getAnh() != null) {
                imageIcon = new ImageIcon(sp.getAnh());
            }

            // Thêm sản phẩm vào bảng
            model.addRow(new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                sp.getDanhMuc(),
                sp.getGiaBan(),
                sp.getSoLuongTon(),
                sp.getMoTa(),
                imageIcon // Hiển thị ảnh nếu có
            });
        }
        if (model.getRowCount() > 0) {
            tblSanPham.setRowSelectionInterval(0, 0); // Chọn hàng đầu tiên
            this.showDeTail(); // Hiển thị thông tin chi tiết của hàng đầu tiên
        }
    }

    private void showDeTail() {
        // Lấy chỉ số dòng được chọn
        int selectedRow = tblSanPham.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm!", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Lấy thông tin từ dòng được chọn
            String ma = tblSanPham.getValueAt(selectedRow, 0).toString();
            String ten = tblSanPham.getValueAt(selectedRow, 1).toString();
            String loai = tblSanPham.getValueAt(selectedRow, 2).toString();
            String gia = tblSanPham.getValueAt(selectedRow, 3).toString();
            String soLuong = tblSanPham.getValueAt(selectedRow, 4).toString();
            String moTa = tblSanPham.getValueAt(selectedRow, 5).toString();

            // Gọi phương thức lấy ảnh từ cơ sở dữ liệu
            ImageIcon anh = LoadAnhFromDB.getImageFromDatabase2(Integer.parseInt(ma));

            // Hiển thị dữ liệu lên các trường trên form
            txtMa.setText(ma);
            txtTen.setText(ten);
            cboLoaiSanPham2.setSelectedItem(loai);
            txtDonGia.setText(gia);
            spnSoLuong.setValue(Integer.parseInt(soLuong));
            txtMoTa.setText(moTa);

            // Hiển thị ảnh
            if (anh != null) {
                lblAnh.setIcon(anh); // Gán ảnh vào JLabel
                lblAnh.setText("");  // Xóa thông báo nếu trước đó có
            } else {
                lblAnh.setIcon(null); // Xóa ảnh nếu không có
                lblAnh.setText("Không có ảnh"); // Hiển thị thông báo
            }

            // Đặt lại dòng được chọn trên bảng (không bắt buộc nếu không cần)
            tblSanPham.setRowSelectionInterval(selectedRow, selectedRow);

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi hiển thị chi tiết sản phẩm: " + ex.getMessage(),
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void addSanPham() {
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thêm sản phẩm này?", "Xác nhận thêm", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                int maSanPham = Integer.parseInt(txtMa.getText());
                String tenSanPham = txtTen.getText();
                String danhMuc = cboLoaiSanPham2.getSelectedItem().toString();
                double giaBan = Double.parseDouble(txtDonGia.getText());
                int soLuongTon = (int) spnSoLuong.getValue(); // Get value from spinner
                String moTa = txtMoTa.getText();

                SanPham sp = new SanPham(maSanPham, tenSanPham, danhMuc, giaBan, soLuongTon, moTa);
                SanPhamRepo repo = new SanPhamRepo();
                int result = repo.addSanPham(sp);

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công.");
                    fillToTable(rp.getAll()); // Refresh table after adding
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm sản phẩm thất bại.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ và chính xác thông tin.");
            }
        }
    }

    private void deleteSanPham() {
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                int maSanPham = Integer.parseInt(txtMa.getText());
                SanPhamRepo repo = new SanPhamRepo();
                int result = repo.deleteSanPham(maSanPham);

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công.");
                    fillToTable(rp.getAll()); // Cập nhật lại bảng sau khi xóa
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa sản phẩm thất bại.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm cần xóa.");
            }
        }
    }

    private void updateSanPham() {
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn cập nhật sản phẩm này?", "Xác nhận cập nhật", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                int maSanPham = Integer.parseInt(txtMa.getText());
                String tenSanPham = txtTen.getText();
                String danhMuc = cboLoaiSanPham2.getSelectedItem().toString();
                double giaBan = Double.parseDouble(txtDonGia.getText());
                int soLuongTon = (int) spnSoLuong.getValue(); // Get value from spinner
                String moTa = txtMoTa.getText();

                SanPham sp = new SanPham(maSanPham, tenSanPham, danhMuc, giaBan, soLuongTon, moTa);
                int result = rp.updateSanPham(sp);

                if (result > 0) {
                    JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thành công.");
                    fillToTable(rp.getAll()); // Refresh table after update
                } else {
                    JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thất bại.");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ và chính xác thông tin.");
            }
        }
    }

    private void timSanPham() {
        String tenten = txtSearch.getText(); // get search term from JTextField
        String loailoai = (String) cboLoaiSanPham1.getSelectedItem(); // get selected category from JComboBox

        SanPhamRepo repo = new SanPhamRepo();
        ArrayList<SanPham> filteredList = repo.getAll(tenten, loailoai);

        // Update table with filtered results
        DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();
        model.setRowCount(0); // Clear existing rows

        for (SanPham sp : filteredList) {
            model.addRow(sp.toDataRow());
        }
    }

    public void importFromExcel() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn tệp Excel để nhập");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Excel Files", "xlsx"));
        int userSelection = fileChooser.showOpenDialog(null);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File fileToOpen = fileChooser.getSelectedFile();

            try ( FileInputStream fis = new FileInputStream(fileToOpen);  Workbook workbook = new XSSFWorkbook(fis)) {
                Sheet sheet = workbook.getSheetAt(0);
                List<SanPham> productList = new ArrayList<>();
                DefaultTableModel model = (DefaultTableModel) tblSanPham.getModel();

                // Duyệt qua các dòng trong sheet (bỏ qua header)
                for (int i = 1; i < sheet.getPhysicalNumberOfRows(); i++) {
                    Row row = sheet.getRow(i);
                    if (row == null || row.getCell(0) == null || row.getCell(0).getCellType() == CellType.BLANK) {
                        System.out.println("Dòng " + (i + 1) + " bị bỏ qua.");
                        continue;
                    }

                    try {
                        int maSanPham = Integer.parseInt(getCellValue(row.getCell(0)));
                        String tenSanPham = getCellValue(row.getCell(1));
                        String loai = getCellValue(row.getCell(2));
                        double giaBan = Double.parseDouble(getCellValue(row.getCell(3)));
                        int soLuongTon = Integer.parseInt(getCellValue(row.getCell(4)));
                        String moTa = getCellValue(row.getCell(5));

                        // Kiểm tra xem mã sản phẩm đã tồn tại trong bảng chưa
                        boolean exists = false;
                        for (int j = 0; j < model.getRowCount(); j++) {
                            if (model.getValueAt(j, 0).equals(maSanPham)) {
                                exists = true;
                                break;
                            }
                        }

                        // Nếu mã sản phẩm chưa tồn tại thì thêm vào danh sách
                        if (!exists) {
                            SanPham product = new SanPham(maSanPham, tenSanPham, loai, giaBan, soLuongTon, moTa);
                            productList.add(product);
                            System.out.println("Đọc thành công sản phẩm: " + maSanPham + " - " + tenSanPham);
                        } else {
                            System.out.println("Sản phẩm với mã " + maSanPham + " đã tồn tại, bỏ qua.");
                        }
                    } catch (Exception e) {
                        System.err.println("Lỗi khi xử lý dòng " + (i + 1) + ": " + e.getMessage());
                    }
                }

                // Thêm sản phẩm vào bảng
                for (SanPham product : productList) {
                    model.addRow(new Object[]{
                        product.getMaSanPham(),
                        product.getTenSanPham(),
                        product.getDanhMuc(),
                        product.getGiaBan(),
                        product.getSoLuongTon(),
                        product.getMoTa()
                    });
                }

                // Kiểm tra số dòng sau khi thêm
                System.out.println("Số dòng trong bảng: " + model.getRowCount());

                // Lưu danh sách sản phẩm vào cơ sở dữ liệu
                SanPhamRepo repo = new SanPhamRepo();
                for (SanPham product : productList) {
                    int result = repo.addSanPham(product); // Gọi phương thức addSanPham
                    if (result > 0) {
                        System.out.println("Sản phẩm " + product.getTenSanPham() + " đã được thêm vào cơ sở dữ liệu.");
                    } else {
                        System.out.println("Lỗi khi thêm sản phẩm " + product.getTenSanPham());
                    }
                }

                tblSanPham.revalidate();
                tblSanPham.repaint();

                JOptionPane.showMessageDialog(null, "Nhập Excel thành công và lưu vào cơ sở dữ liệu!");

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Lỗi khi nhập Excel: " + e.getMessage());
            }
        }
    }

    // Phương thức để lấy giá trị từ ô (nếu là số thì chuyển thành chuỗi, nếu rỗng thì trả về chuỗi trống)
    private String getCellValue(Cell cell) {
        if (cell == null) {
            return "";
        }
        switch (cell.getCellType()) {
            case STRING:
                return cell.getStringCellValue();
            case NUMERIC:
                if (DateUtil.isCellDateFormatted(cell)) {
                    // Xử lý giá trị ngày tháng nếu cần
                    return cell.getDateCellValue().toString();
                } else {
                    // Trả về giá trị số, loại bỏ ".0" nếu là số nguyên
                    double numericValue = cell.getNumericCellValue();
                    if (numericValue == (int) numericValue) {
                        return String.valueOf((int) numericValue);
                    } else {
                        return String.valueOf(numericValue);
                    }
                }
            case BOOLEAN:
                return String.valueOf(cell.getBooleanCellValue());
            case FORMULA:
                return cell.getCellFormula();
            default:
                return "";
        }
    }

    private void clearForm() {
        // Xóa các trường văn bản
        txtMa.setText("");
        txtTen.setText("");
        txtDonGia.setText("");
        txtMoTa.setText("");

        // Đặt lại giá trị của comboBox
        cboLoaiSanPham2.setSelectedIndex(0); // Chọn giá trị mặc định đầu tiên

        // Đặt lại giá trị của Spinner (số lượng)
        spnSoLuong.setValue(0);  // Đặt lại số lượng về 0

        // Xóa ảnh (đặt lại JLabel hiển thị thông báo nếu không có ảnh)
        lblAnh.setIcon(null);
        lblAnh.setText("Không có ảnh");

        // Xóa chọn dòng trong bảng nếu cần
        tblSanPham.clearSelection();
    }

}
