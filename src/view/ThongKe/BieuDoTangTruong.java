/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.ThongKe;

import java.awt.BasicStroke;
import java.awt.GradientPaint;
import java.util.Map;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import repository.HoaDonRepo;

/**
 *
 * @author Admin
 */
public class BieuDoTangTruong extends javax.swing.JFrame {

    /**
     * Creates new form BieuDoTangTruong
     */
    public BieuDoTangTruong() {
        initComponents();
        setLocationRelativeTo(null);
        setSize(1009, 584);
// Lấy dữ liệu tốc độ tăng trưởng
        HoaDonRepo repository = new HoaDonRepo();
        Map<String, Double> growthData = repository.getTocDoTangTruong();

// Tạo dataset cho biểu đồ
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        for (Map.Entry<String, Double> entry : growthData.entrySet()) {
            dataset.addValue(entry.getValue(), "Tốc độ tăng trưởng (%)", entry.getKey());
        }

// Tạo biểu đồ đường (Line Chart)
        JFreeChart lineChart = ChartFactory.createLineChart(
                "Biểu đồ tốc độ tăng trưởng doanh thu", // Tiêu đề
                "Tháng", // Trục X
                "Tốc độ tăng trưởng (%)", // Trục Y
                dataset // Dataset
        );

// Tùy chỉnh đường trong biểu đồ
        CategoryPlot plot = lineChart.getCategoryPlot();
        LineAndShapeRenderer renderer = (LineAndShapeRenderer) plot.getRenderer();

// Thêm gradient cho đường biểu đồ
        GradientPaint gradient = new GradientPaint(0, 0, new java.awt.Color(0, 153, 76), 0, 1, new java.awt.Color(0, 255, 127));
        renderer.setSeriesPaint(0, gradient);  // Áp dụng gradient cho đường

// Tùy chỉnh đường và hình dạng của các điểm
        renderer.setShapesVisible(true);  // Hiển thị điểm dữ liệu
        renderer.setShapesFilled(true);   // Làm cho các điểm dữ liệu đầy
        renderer.setSeriesShape(0, new java.awt.geom.Ellipse2D.Double(-3, -3, 6, 6));  // Thay đổi hình dạng của các điểm (hình tròn)
        renderer.setSeriesStroke(0, new BasicStroke(2.0f));  // Tăng độ dày của đường

// Tùy chỉnh tiêu đề biểu đồ
        lineChart.setTitle("Biểu đồ tốc độ tăng trưởng doanh thu");
        lineChart.getTitle().setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 16)); // Phông chữ tiêu đề

// Tùy chỉnh trục X và Y
        plot.getDomainAxis().setLabelFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 12)); // Font của trục X
        plot.getRangeAxis().setLabelFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 12));  // Font của trục Y
        plot.getDomainAxis().setTickLabelFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 10)); // Font của các nhãn trên trục X
        plot.getRangeAxis().setTickLabelFont(new java.awt.Font("Arial", java.awt.Font.PLAIN, 10));  // Font của các nhãn trên trục Y

// Tùy chỉnh trục X để hiển thị các tháng rõ ràng hơn
        plot.getDomainAxis().setCategoryLabelPositions(CategoryLabelPositions.UP_45); // Xoay nhãn trục X cho dễ đọc

// Thêm biểu đồ vào ChartPanel
        ChartPanel chartPanel = new ChartPanel(lineChart);
        chartPanel.setPreferredSize(new java.awt.Dimension(800, 600)); // Kích thước biểu đồ

// Thêm ChartPanel vào JPanel chartPanel
        this.chartPanel.setLayout(new java.awt.BorderLayout());
        this.chartPanel.add(chartPanel, java.awt.BorderLayout.CENTER);
        this.chartPanel.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chartPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chartPanel.setPreferredSize(new java.awt.Dimension(1009, 584));

        javax.swing.GroupLayout chartPanelLayout = new javax.swing.GroupLayout(chartPanel);
        chartPanel.setLayout(chartPanelLayout);
        chartPanelLayout.setHorizontalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        chartPanelLayout.setVerticalGroup(
            chartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(chartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BieuDoTangTruong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BieuDoTangTruong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BieuDoTangTruong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BieuDoTangTruong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BieuDoTangTruong().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chartPanel;
    // End of variables declaration//GEN-END:variables
}
